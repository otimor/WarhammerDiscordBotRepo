Transform: AWS::Serverless-2016-10-31
Description: lambdas
Globals:
  Function:
    Timeout: 20

Parameters:
  StageName:
    Type: String
    Description: Stage Name used in API GW
    Default: Prod



Resources:
  MainSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: MainSNSTopicName

  proxyGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      MethodSettings:
        - ResourcePath: /{proxy+}
          HttpMethod: ANY

  proxyFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: WarhammerDiscordBot/discord_bot/
      Runtime: python3.11
      Handler: app.lambda_handler
      Description: function to dispatch commands for WarhammerDiscordBot
      Policies:
        ## Read more about SAM Policy templates at:
        ## https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt MainSNSTopic.TopicName
        #- AWSSecretsManagerGetSecretValuePolicy:
        #    SecretArn: !Ref DiscordBotSecret
      Events:
          WarhammerDiscordBotApi:
             Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
             Properties:
                Path: /WarhammerDiscordBot/
                Method: ANY
                RestApiId: !Ref proxyGateway
      Environment:
        Variables:
          TOPIC_ARN: !Ref MainSNSTopic

  commandFunctionHello:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: WarhammerDiscordBot/discord_bot/
      Runtime: python3.11
      Handler: command_handler.command_handler
      Description: function responding with hello command for WarhammerDiscordBot
      Events:
          SNSEvent:
            Type: SNS
            Properties:
              Topic: !Ref MainSNSTopic
              FilterPolicy: {
                "command": [
                  "hello"
                ]
              }
      Policies:
        ## Read more about SAM Policy templates at:
        ## https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess

Outputs:
# ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
# Find out more about other implicit resources you can reference within SAM
# https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  WarhammerDiscordBotApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${proxyGateway}.execute-api.${AWS::Region}.amazonaws.com/${StageName}/WarhammerDiscordBot/"

  SNStopicName:
    Description: SNS topic name
    Value: !GetAtt MainSNSTopic.TopicName

  SNStopicARN:
    Description: SNS topic ARN
    Value: !Ref MainSNSTopic

  #WarhammerDiscordBotFunctionIamRole:
  #  Description: "Implicit IAM Role created for Hello World function"
  #  Value: !GetAtt WarhammerDiscordBotFunctionRole.Arn
